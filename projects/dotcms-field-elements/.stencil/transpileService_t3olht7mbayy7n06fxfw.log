{"moduleFile":{"sourceFilePath":"/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-form/utils/fields.tsx","localImports":["/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-form/utils"],"externalImports":["dotcms-models"],"potentialCmpRefs":[{"tag":"dot-textfield"},{"tag":"dot-textarea"},{"tag":"dot-checkbox"},{"tag":"dot-multi-select"},{"tag":"dot-key-value"},{"tag":"dot-select"},{"tag":"dot-radio"},{"tag":"dot-date"},{"tag":"dot-time"},{"tag":"dot-date-time"},{"tag":"dot-date-range"},{"tag":"dot-tags"},{"tag":"dot-binary-file"}],"hasSlot":false,"hasSvg":false,"jsFilePath":"/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-form/utils/fields.js"},"jsText":"import { getFieldVariableValue, setAttributesToTag } from '.';\r\nexport const DotFormFields = {\r\n    Text: (field) => (h(\"dot-textfield\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, \"regex-check\": field.regexCheck, required: field.required, value: field.defaultValue })),\r\n    Textarea: (field) => (h(\"dot-textarea\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, \"regex-check\": field.regexCheck, required: field.required, value: field.defaultValue })),\r\n    Checkbox: (field) => (h(\"dot-checkbox\", { hint: field.hint, label: field.name, name: field.variable, options: field.values, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, required: field.required, value: field.defaultValue })),\r\n    'Multi-Select': (field) => (h(\"dot-multi-select\", { hint: field.hint, label: field.name, name: field.variable, options: field.values, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, required: field.required, value: field.defaultValue })),\r\n    'Key-Value': (field) => (h(\"dot-key-value\", { \"field-type\": field.fieldType, hint: field.hint, label: field.name, name: field.variable, required: field.required, value: field.defaultValue })),\r\n    Select: (field) => (h(\"dot-select\", { hint: field.hint, label: field.name, name: field.variable, options: field.values, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, required: field.required, value: field.defaultValue })),\r\n    Radio: (field) => (h(\"dot-radio\", { hint: field.hint, label: field.name, name: field.variable, options: field.values, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, required: field.required, value: field.defaultValue })),\r\n    Date: (field) => (h(\"dot-date\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, required: field.required, value: field.defaultValue })),\r\n    Time: (field) => (h(\"dot-time\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, required: field.required, value: field.defaultValue })),\r\n    'Date-and-Time': (field) => (h(\"dot-date-time\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, required: field.required, value: field.defaultValue })),\r\n    'Date-Range': (field) => (h(\"dot-date-range\", { hint: field.hint, label: field.name, name: field.variable, required: field.required, value: field.defaultValue })),\r\n    Tag: (field) => (h(\"dot-tags\", { data: () => {\r\n            return fetch('/api/v1/tags')\r\n                .then((data) => data.json())\r\n                .then((items) => Object.keys(items))\r\n                .catch(() => []);\r\n        }, hint: field.hint, label: field.name, name: field.variable, required: field.required, value: field.defaultValue })),\r\n    Binary: (field) => (h(\"dot-binary-file\", { accept: getFieldVariableValue(field.fieldVariables, 'accept'), \"max-file-length\": getFieldVariableValue(field.fieldVariables, 'maxFileLength'), hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\r\n            setAttributesToTag(el, field.fieldVariables);\r\n        }, required: field.required }))\r\n};\r\n"}