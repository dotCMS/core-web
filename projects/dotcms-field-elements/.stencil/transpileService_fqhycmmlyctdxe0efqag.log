{"moduleFile":{"sourceFilePath":"/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-input-calendar/dot-input-calendar.tsx","localImports":["/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/utils"],"externalImports":["@stencil/core","stencil-fragment","stencil-fragment"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"dot-input-calendar","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-input-calendar/dot-input-calendar.scss","cmpRelativePath":"dot-input-calendar.scss","originalComponentPath":"dot-input-calendar.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"DotInputCalendarComponent","tags":[],"documentation":"","type":"typeof DotInputCalendarComponent"},"encapsulationMeta":0,"componentClass":"DotInputCalendarComponent","membersMeta":{"el":{"memberType":64},"reset":{"memberType":32,"attribType":{"text":"() => void","optional":false,"required":false,"typeReferences":{}},"jsdoc":{"name":"reset","tags":[],"documentation":"Reset properties of the field, clear value and emit events.","type":"() => void","returns":{"type":"void","documentation":""},"parameters":[]}},"status":{"memberType":16},"value":{"memberType":2,"attribName":"value","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"value","tags":[],"documentation":"Value specifies the value of the <input> element","type":"string","default":"''"}},"name":{"memberType":1,"attribName":"name","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"name","tags":[],"documentation":"Name that will be used as ID","type":"string","default":"''"}},"required":{"memberType":1,"attribName":"required","attribType":{"text":"boolean","required":false,"optional":false},"reflectToAttrib":true,"propType":4,"jsdoc":{"name":"required","tags":[],"documentation":"(optional) Determine if it is mandatory","type":"boolean","default":"false"}},"disabled":{"memberType":1,"attribName":"disabled","attribType":{"text":"boolean","required":false,"optional":false},"reflectToAttrib":true,"propType":4,"jsdoc":{"name":"disabled","tags":[],"documentation":"(optional) Disables field's interaction","type":"boolean","default":"false"}},"min":{"memberType":1,"attribName":"min","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"min","tags":[],"documentation":"(optional) Min, minimum value that the field will allow to set, expect a Date Format.","type":"string","default":"''"}},"max":{"memberType":1,"attribName":"max","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"max","tags":[],"documentation":"(optional) Max, maximum value that the field will allow to set, expect a Date Format","type":"string","default":"''"}},"step":{"memberType":1,"attribName":"step","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"step","tags":[],"documentation":"(optional) Step specifies the legal number intervals for the input field","type":"string","default":"'1'"}},"type":{"memberType":1,"attribName":"type","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"type","tags":[],"documentation":"type specifies the type of <input> element to display","type":"string","default":"''"}}},"eventsMeta":[{"eventMethodName":"_valueChange","eventName":"_valueChange","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"eventType":{"text":"DotFieldValueEvent","optional":false,"required":false,"typeReferences":{"EventEmitter":{"referenceLocation":"import","importReferenceLocation":"@stencil/core"},"DotFieldValueEvent":{"referenceLocation":"import","importReferenceLocation":"../../models"}}},"jsdoc":{"name":"_valueChange","tags":[],"documentation":"","type":"EventEmitter<DotFieldValueEvent>"}},{"eventMethodName":"_statusChange","eventName":"_statusChange","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"eventType":{"text":"DotInputCalendarStatusEvent","optional":false,"required":false,"typeReferences":{"EventEmitter":{"referenceLocation":"import","importReferenceLocation":"@stencil/core"},"DotInputCalendarStatusEvent":{"referenceLocation":"import","importReferenceLocation":"../../models"}}},"jsdoc":{"name":"_statusChange","tags":[],"documentation":"","type":"EventEmitter<DotInputCalendarStatusEvent>"}}],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-input-calendar/dot-input-calendar.js"},"jsText":"import Fragment from 'stencil-fragment';\r\nimport { getErrorClass, getId, getOriginalStatus, updateStatus } from '../../utils';\r\nexport class DotInputCalendarComponent {\r\n    constructor() {\r\n        this.value = '';\r\n        this.name = '';\r\n        this.required = false;\r\n        this.disabled = false;\r\n        this.min = '';\r\n        this.max = '';\r\n        this.step = '1';\r\n        this.type = '';\r\n    }\r\n    reset() {\r\n        this.value = '';\r\n        this.status = getOriginalStatus(this.isValid());\r\n        this.emitValueChange();\r\n        this.emitStatusChange();\r\n    }\r\n    componentWillLoad() {\r\n        this.status = getOriginalStatus(this.isValid());\r\n        this.emitStatusChange();\r\n    }\r\n    render() {\r\n        return (h(Fragment, null,\r\n            h(\"input\", { class: getErrorClass(this.status.dotValid), disabled: this.disabled || null, id: getId(this.name), onBlur: () => this.blurHandler(), onInput: (event) => this.setValue(event), required: this.required || null, type: this.type, value: this.value, min: this.min, max: this.max, step: this.step })));\r\n    }\r\n    isValid() {\r\n        return this.isValueInRange() && this.isRequired();\r\n    }\r\n    isRequired() {\r\n        return this.required ? !!this.value : true;\r\n    }\r\n    isValueInRange() {\r\n        return this.isInMaxRange() && this.isInMinRange();\r\n    }\r\n    isInMinRange() {\r\n        return !!this.min ? this.value >= this.min : true;\r\n    }\r\n    isInMaxRange() {\r\n        return !!this.max ? this.value <= this.max : true;\r\n    }\r\n    blurHandler() {\r\n        if (!this.status.dotTouched) {\r\n            this.status = updateStatus(this.status, {\r\n                dotTouched: true\r\n            });\r\n            this.emitStatusChange();\r\n        }\r\n    }\r\n    setValue(event) {\r\n        this.value = event.target.value.toString();\r\n        this.status = updateStatus(this.status, {\r\n            dotTouched: true,\r\n            dotPristine: false,\r\n            dotValid: this.isValid()\r\n        });\r\n        this.emitValueChange();\r\n        this.emitStatusChange();\r\n    }\r\n    emitStatusChange() {\r\n        this._statusChange.emit({\r\n            name: this.name,\r\n            status: this.status,\r\n            isValidRange: this.isValueInRange()\r\n        });\r\n    }\r\n    emitValueChange() {\r\n        this._valueChange.emit({\r\n            name: this.name,\r\n            value: this.formattedValue()\r\n        });\r\n    }\r\n    formattedValue() {\r\n        return this.value.length === 5 ? `${this.value}:00` : this.value;\r\n    }\r\n    static get is() { return \"dot-input-calendar\"; }\r\n    static get properties() { return {\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"max\": {\r\n            \"type\": String,\r\n            \"attr\": \"max\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"min\": {\r\n            \"type\": String,\r\n            \"attr\": \"min\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"name\": {\r\n            \"type\": String,\r\n            \"attr\": \"name\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"required\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"required\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"reset\": {\r\n            \"method\": true\r\n        },\r\n        \"status\": {\r\n            \"state\": true\r\n        },\r\n        \"step\": {\r\n            \"type\": String,\r\n            \"attr\": \"step\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"type\": {\r\n            \"type\": String,\r\n            \"attr\": \"type\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"value\": {\r\n            \"type\": String,\r\n            \"attr\": \"value\",\r\n            \"reflectToAttr\": true,\r\n            \"mutable\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"_valueChange\",\r\n            \"method\": \"_valueChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"_statusChange\",\r\n            \"method\": \"_statusChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \"/**style-placeholder:dot-input-calendar:**/\"; }\r\n}\r\n"}