{"moduleFile":{"sourceFilePath":"/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-key-value/key-value-form/key-value-form.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"key-value-form","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-key-value/key-value-form/key-value-form.scss","cmpRelativePath":"key-value-form.scss","originalComponentPath":"key-value-form.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"DotKeyValueComponent","tags":[],"documentation":"","type":"typeof DotKeyValueComponent"},"encapsulationMeta":0,"componentClass":"DotKeyValueComponent","membersMeta":{"el":{"memberType":64},"inputs":{"memberType":16},"disabled":{"memberType":1,"attribName":"disabled","attribType":{"text":"boolean","required":false,"optional":false},"reflectToAttrib":true,"propType":4,"jsdoc":{"name":"disabled","tags":[],"documentation":"(optional) Disables all form interaction","type":"boolean","default":"false"}},"addButtonLabel":{"memberType":1,"attribName":"add-button-label","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"addButtonLabel","tags":[],"documentation":"(optional) Label for the add item button","type":"string","default":"'Add'"}},"keyPlaceholder":{"memberType":1,"attribName":"key-placeholder","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"keyPlaceholder","tags":[],"documentation":"(optional) Placeholder for the key input text","type":"string","default":"''"}},"valuePlaceholder":{"memberType":1,"attribName":"value-placeholder","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"valuePlaceholder","tags":[],"documentation":"(optional) Placeholder for the value input text","type":"string","default":"''"}},"keyLabel":{"memberType":1,"attribName":"key-label","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"keyLabel","tags":[],"documentation":"(optional) The string to use in the key input label","type":"string","default":"'Key'"}},"valueLabel":{"memberType":1,"attribName":"value-label","attribType":{"text":"string","required":false,"optional":false},"reflectToAttrib":true,"propType":2,"jsdoc":{"name":"valueLabel","tags":[],"documentation":"(optional) The string to use in the value input label","type":"string","default":"'Value'"}}},"eventsMeta":[{"eventMethodName":"add","eventName":"add","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"eventType":{"text":"DotKeyValueField","optional":false,"required":false,"typeReferences":{"EventEmitter":{"referenceLocation":"import","importReferenceLocation":"@stencil/core"},"DotKeyValueField":{"referenceLocation":"import","importReferenceLocation":"../../../models"}}},"jsdoc":{"name":"add","tags":[],"documentation":"Emit the added value, key/value pair","type":"EventEmitter<DotKeyValueField>"}},{"eventMethodName":"lostFocus","eventName":"lostFocus","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"eventType":{"text":"FocusEvent","optional":false,"required":false,"typeReferences":{"EventEmitter":{"referenceLocation":"import","importReferenceLocation":"@stencil/core"},"FocusEvent":{"referenceLocation":"global"}}},"jsdoc":{"name":"lostFocus","tags":[],"documentation":"Emit when any of the input is blur","type":"EventEmitter<FocusEvent>"}}],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/Users/fmontes/development/core-web/projects/dotcms-field-elements/src/components/dot-key-value/key-value-form/key-value-form.js"},"jsText":"const DEFAULT_VALUE = { key: '', value: '' };\r\nexport class DotKeyValueComponent {\r\n    constructor() {\r\n        this.disabled = false;\r\n        this.addButtonLabel = 'Add';\r\n        this.keyPlaceholder = '';\r\n        this.valuePlaceholder = '';\r\n        this.keyLabel = 'Key';\r\n        this.valueLabel = 'Value';\r\n        this.inputs = Object.assign({}, DEFAULT_VALUE);\r\n    }\r\n    render() {\r\n        const buttonDisabled = this.isButtonDisabled();\r\n        return (h(\"form\", { onSubmit: this.addKey.bind(this) },\r\n            h(\"label\", null,\r\n                this.keyLabel,\r\n                h(\"input\", { disabled: this.disabled, name: \"key\", onBlur: (e) => this.lostFocus.emit(e), onInput: (event) => this.setValue(event), placeholder: this.keyPlaceholder, type: \"text\", value: this.inputs.key })),\r\n            h(\"label\", null,\r\n                this.valueLabel,\r\n                h(\"input\", { disabled: this.disabled, name: \"value\", onBlur: (e) => this.lostFocus.emit(e), onInput: (event) => this.setValue(event), placeholder: this.valuePlaceholder, type: \"text\", value: this.inputs.value })),\r\n            h(\"button\", { class: \"key-value-form__save__button\", type: \"submit\", disabled: buttonDisabled }, this.addButtonLabel)));\r\n    }\r\n    isButtonDisabled() {\r\n        return !this.isFormValid() || (this.disabled || null);\r\n    }\r\n    isFormValid() {\r\n        return !!(this.inputs.key.length && this.inputs.value.length);\r\n    }\r\n    setValue(event) {\r\n        event.stopImmediatePropagation();\r\n        const target = event.target;\r\n        this.inputs = Object.assign({}, this.inputs, { [target.name]: target.value.toString() });\r\n    }\r\n    addKey(event) {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        if (this.inputs.key && this.inputs.value) {\r\n            this.add.emit(this.inputs);\r\n            this.clearForm();\r\n            this.focusKeyInputField();\r\n        }\r\n    }\r\n    clearForm() {\r\n        this.inputs = Object.assign({}, DEFAULT_VALUE);\r\n    }\r\n    focusKeyInputField() {\r\n        const input = this.el.querySelector('input[name=\"key\"]');\r\n        input.focus();\r\n    }\r\n    static get is() { return \"key-value-form\"; }\r\n    static get properties() { return {\r\n        \"addButtonLabel\": {\r\n            \"type\": String,\r\n            \"attr\": \"add-button-label\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"inputs\": {\r\n            \"state\": true\r\n        },\r\n        \"keyLabel\": {\r\n            \"type\": String,\r\n            \"attr\": \"key-label\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"keyPlaceholder\": {\r\n            \"type\": String,\r\n            \"attr\": \"key-placeholder\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"valueLabel\": {\r\n            \"type\": String,\r\n            \"attr\": \"value-label\",\r\n            \"reflectToAttr\": true\r\n        },\r\n        \"valuePlaceholder\": {\r\n            \"type\": String,\r\n            \"attr\": \"value-placeholder\",\r\n            \"reflectToAttr\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"add\",\r\n            \"method\": \"add\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"lostFocus\",\r\n            \"method\": \"lostFocus\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \"/**style-placeholder:key-value-form:**/\"; }\r\n}\r\n"}