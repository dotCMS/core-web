import { h } from '../dotcmsfields.core.js';
import { a as Fragment } from './chunk-1d89c98b.js';
import { a as getOriginalStatus, b as checkProp, c as getClassNames, h as getHintId, i as getErrorClass, k as getId, d as getTagHint, e as getTagError, f as updateStatus } from './chunk-62cd3eff.js';
import { a as getDotAttributesFromElement, b as setDotAttributesToElement } from './chunk-4205a04e.js';
var DotTextareaComponent = /** @class */ (function () {
    function DotTextareaComponent() {
        this.value = '';
        this.name = '';
        this.label = '';
        this.hint = '';
        this.required = false;
        this.requiredMessage = 'This field is required';
        this.validationMessage = "The field doesn't comply with the specified format";
        this.disabled = false;
        this.regexCheck = '';
    }
    DotTextareaComponent.prototype.reset = function () {
        this.value = '';
        this.status = getOriginalStatus(this.isValid());
        this.emitStatusChange();
        this.emitValueChange();
    };
    DotTextareaComponent.prototype.componentWillLoad = function () {
        this.value = this.value || '';
        this.validateProps();
        this.status = getOriginalStatus(this.isValid());
        this.emitStatusChange();
    };
    DotTextareaComponent.prototype.componentDidLoad = function () {
        var _this = this;
        var htmlElement = this.el.querySelector('textarea');
        setTimeout(function () {
            var attrs = getDotAttributesFromElement(Array.from(_this.el.attributes), []);
            setDotAttributesToElement(htmlElement, attrs);
        }, 0);
    };
    DotTextareaComponent.prototype.regexCheckWatch = function () {
        this.regexCheck = checkProp(this, 'regexCheck');
    };
    DotTextareaComponent.prototype.valueWatch = function () {
        this.value = this.value || '';
    };
    DotTextareaComponent.prototype.hostData = function () {
        return {
            class: getClassNames(this.status, this.isValid(), this.required)
        };
    };
    DotTextareaComponent.prototype.render = function () {
        var _this = this;
        return (h(Fragment, null, h("dot-label", { label: this.label, required: this.required, name: this.name }, h("textarea", { "aria-describedby": getHintId(this.hint), class: getErrorClass(this.status.dotValid), id: getId(this.name), name: this.name, value: this.value, required: this.getRequiredAttr(), onInput: function (event) { return _this.setValue(event); }, onBlur: function () { return _this.blurHandler(); }, disabled: this.getDisabledAtt() })), getTagHint(this.hint), getTagError(this.shouldShowErrorMessage(), this.getErrorMessage())));
    };
    DotTextareaComponent.prototype.validateProps = function () {
        this.regexCheckWatch();
    };
    DotTextareaComponent.prototype.getDisabledAtt = function () {
        return this.disabled || null;
    };
    DotTextareaComponent.prototype.getRequiredAttr = function () {
        return this.required ? true : null;
    };
    DotTextareaComponent.prototype.isValid = function () {
        return !this.isValueRequired() && this.isRegexValid();
    };
    DotTextareaComponent.prototype.isValueRequired = function () {
        return this.required && !this.value.length;
    };
    DotTextareaComponent.prototype.isRegexValid = function () {
        if (this.regexCheck && this.value.length) {
            var regex = new RegExp(this.regexCheck, 'ig');
            return regex.test(this.value);
        }
        return true;
    };
    DotTextareaComponent.prototype.shouldShowErrorMessage = function () {
        return this.getErrorMessage() && !this.status.dotPristine;
    };
    DotTextareaComponent.prototype.getErrorMessage = function () {
        return this.isRegexValid()
            ? this.isValid()
                ? ''
                : this.requiredMessage
            : this.validationMessage;
    };
    DotTextareaComponent.prototype.blurHandler = function () {
        if (!this.status.dotTouched) {
            this.status = updateStatus(this.status, {
                dotTouched: true
            });
            this.emitStatusChange();
        }
    };
    DotTextareaComponent.prototype.setValue = function (event) {
        this.value = event.target.value.toString();
        this.status = updateStatus(this.status, {
            dotTouched: true,
            dotPristine: false,
            dotValid: this.isValid()
        });
        this.emitValueChange();
        this.emitStatusChange();
    };
    DotTextareaComponent.prototype.emitStatusChange = function () {
        this.statusChange.emit({
            name: this.name,
            status: this.status
        });
    };
    DotTextareaComponent.prototype.emitValueChange = function () {
        this.valueChange.emit({
            name: this.name,
            value: this.value
        });
    };
    Object.defineProperty(DotTextareaComponent, "is", {
        get: function () { return "dot-textarea"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DotTextareaComponent, "properties", {
        get: function () {
            return {
                "disabled": {
                    "type": Boolean,
                    "attr": "disabled",
                    "reflectToAttr": true,
                    "mutable": true
                },
                "el": {
                    "elementRef": true
                },
                "hint": {
                    "type": String,
                    "attr": "hint",
                    "reflectToAttr": true
                },
                "label": {
                    "type": String,
                    "attr": "label",
                    "reflectToAttr": true
                },
                "name": {
                    "type": String,
                    "attr": "name",
                    "reflectToAttr": true
                },
                "regexCheck": {
                    "type": String,
                    "attr": "regex-check",
                    "reflectToAttr": true,
                    "mutable": true,
                    "watchCallbacks": ["regexCheckWatch"]
                },
                "required": {
                    "type": Boolean,
                    "attr": "required",
                    "reflectToAttr": true,
                    "mutable": true
                },
                "requiredMessage": {
                    "type": String,
                    "attr": "required-message",
                    "reflectToAttr": true
                },
                "reset": {
                    "method": true
                },
                "status": {
                    "state": true
                },
                "validationMessage": {
                    "type": String,
                    "attr": "validation-message",
                    "reflectToAttr": true
                },
                "value": {
                    "type": String,
                    "attr": "value",
                    "reflectToAttr": true,
                    "mutable": true,
                    "watchCallbacks": ["valueWatch"]
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DotTextareaComponent, "events", {
        get: function () {
            return [{
                    "name": "valueChange",
                    "method": "valueChange",
                    "bubbles": true,
                    "cancelable": true,
                    "composed": true
                }, {
                    "name": "statusChange",
                    "method": "statusChange",
                    "bubbles": true,
                    "cancelable": true,
                    "composed": true
                }];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DotTextareaComponent, "style", {
        get: function () { return "/**style-placeholder:dot-textarea:**/"; },
        enumerable: true,
        configurable: true
    });
    return DotTextareaComponent;
}());
export { DotTextareaComponent as DotTextarea };
