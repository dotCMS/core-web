const t=window.dotcmsFields.h;import{a as e}from"./chunk-1d89c98b.js";import{a as s,b as a,n as i,c as l,h,i as r,k as n,d as o,e as u,f as c}from"./chunk-62cd3eff.js";import{a as d,b as m}from"./chunk-4205a04e.js";class p{constructor(){this.disabled=!1,this.name="",this.label="",this.hint="",this.options="",this.required=!1,this.requiredMessage="This field is required",this.value=""}componentWillLoad(){this.value=this.value||"",this.validateProps(),this.emitValueChange(),this.status=s(this.isValid()),this.emitStatusChange()}componentDidLoad(){const t=["dottype"],e=this.el.querySelectorAll('input[type="checkbox"]');setTimeout(()=>{const s=d(Array.from(this.el.attributes),t);e.forEach(t=>{m(t,s)})},0)}optionsWatch(){const t=a(this,"options");this._options=i(t)}valueWatch(){this.value=this.value||""}hostData(){return{class:l(this.status,this.isValid(),this.required)}}reset(){this.value="",this.status=s(this.isValid()),this.emitValueChange(),this.emitStatusChange()}render(){return t(e,null,t("dot-label",{label:this.label,required:this.required,name:this.name},t("div",{"aria-describedby":h(this.hint),tabIndex:this.hint?0:null,class:"dot-checkbox__items"},this._options.map(e=>{const s=e.value.trim();return t("label",null,t("input",{class:r(this.isValid()),name:n(this.name),type:"checkbox",disabled:this.disabled||null,checked:this.value.indexOf(s)>=0||null,onInput:t=>this.setValue(t),value:s}),e.label)}))),o(this.hint),u(!this.isValid(),this.requiredMessage))}validateProps(){this.optionsWatch()}setValue(t){this.value=this.getValueFromCheckInputs(t.target.value.trim(),t.target.checked),this.status=c(this.status,{dotTouched:!0,dotPristine:!1,dotValid:this.isValid()}),this.emitValueChange(),this.emitStatusChange()}getValueFromCheckInputs(t,e){const s=this.value.trim().length?this.value.split(","):[],a=new Set(s);return e?a.add(t):a.delete(t),Array.from(a).join(",")}emitStatusChange(){this.statusChange.emit({name:this.name,status:this.status})}isValid(){return!this.required||!!this.value}emitValueChange(){this.valueChange.emit({name:this.name,value:this.value})}static get is(){return"dot-checkbox"}static get properties(){return{_options:{state:!0},disabled:{type:Boolean,attr:"disabled",reflectToAttr:!0,mutable:!0},el:{elementRef:!0},hint:{type:String,attr:"hint",reflectToAttr:!0},label:{type:String,attr:"label",reflectToAttr:!0},name:{type:String,attr:"name",reflectToAttr:!0},options:{type:String,attr:"options",reflectToAttr:!0,watchCallbacks:["optionsWatch"]},required:{type:Boolean,attr:"required",reflectToAttr:!0},requiredMessage:{type:String,attr:"required-message",reflectToAttr:!0},reset:{method:!0},status:{state:!0},value:{type:String,attr:"value",reflectToAttr:!0,mutable:!0,watchCallbacks:["valueWatch"]}}}static get events(){return[{name:"valueChange",method:"valueChange",bubbles:!0,cancelable:!0,composed:!0},{name:"statusChange",method:"statusChange",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return".dot-checkbox__items{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.dot-checkbox__items label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.dot-checkbox__items input{margin:0 .25rem 0 0}"}}export{p as DotCheckbox};