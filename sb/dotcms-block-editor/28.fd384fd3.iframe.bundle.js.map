{"version":3,"file":"28.fd384fd3.iframe.bundle.js","mappings":"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","sources":["./dist/libs/dotcms-webcomponents/dist/esm/dot-multi-select.entry.js","./dist/libs/dotcms-webcomponents/dist/esm/index-889b3269.js","./node_modules/core-js/internals/array-reduce.js","./node_modules/core-js/modules/es.array.reduce.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-094afd6e.js';\nimport { g as getOriginalStatus, f as getDotOptionsFromFieldValue, a as getClassNames, b as getTagError, c as getTagHint, h as getHintId, j as getErrorClass, k as getId, u as updateStatus } from './utils-61ba0d04.js';\nimport { c as checkProp } from './checkProp-286e406e.js';\nimport { g as getDotAttributesFromElement, s as setDotAttributesToElement } from './index-889b3269.js';\n\nconst dotMultiSelectCss = \"\";\n\nlet DotMultiSelectComponent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.dotValueChange = createEvent(this, \"dotValueChange\", 7);\n    this.dotStatusChange = createEvent(this, \"dotStatusChange\", 7);\n    /** Value set from the dropdown option */\n    this.value = '';\n    /** Name that will be used as ID */\n    this.name = '';\n    /** (optional) Text to be rendered next to input field */\n    this.label = '';\n    /** (optional) Hint text that suggest a clue of the field */\n    this.hint = '';\n    /** Value/Label dropdown options separated by comma, to be formatted as: Value|Label */\n    this.options = '';\n    /** (optional) Determine if it is mandatory */\n    this.required = false;\n    /** (optional) Text that will be shown when required is set and condition is not met */\n    this.requiredMessage = `This field is required`;\n    /** (optional) Disables field's interaction */\n    this.disabled = false;\n    /** (optional) Size number of the multi-select dropdown (default=3) */\n    this.size = '3';\n    this._dotTouched = false;\n    this._dotPristine = true;\n  }\n  componentWillLoad() {\n    this.validateProps();\n    this.emitInitialValue();\n    this.status = getOriginalStatus(this.isValid());\n    this.emitStatusChange();\n  }\n  componentDidLoad() {\n    const htmlElement = this.el.querySelector('select');\n    setTimeout(() => {\n      const attrs = getDotAttributesFromElement(Array.from(this.el.attributes), []);\n      setDotAttributesToElement(htmlElement, attrs);\n    }, 0);\n  }\n  optionsWatch() {\n    const validOptions = checkProp(this, 'options');\n    this._options = getDotOptionsFromFieldValue(validOptions);\n  }\n  /**\n   * Reset properties of the field, clear value and emit events.\n   *\n   * @memberof DotSelectComponent\n   *\n   */\n  async reset() {\n    this.value = '';\n    this.status = getOriginalStatus(this.isValid());\n    this.emitInitialValue();\n    this.emitStatusChange();\n  }\n  render() {\n    const classes = getClassNames(this.status, this.isValid(), this.required);\n    return (h(Host, { class: Object.assign({}, classes) }, h(\"dot-label\", { label: this.label, required: this.required, name: this.name }, h(\"select\", { multiple: true, \"aria-describedby\": getHintId(this.hint), size: +this.size, class: getErrorClass(this.status.dotValid), id: getId(this.name), disabled: this.shouldBeDisabled(), onChange: () => this.setValue() }, this._options.map((item) => {\n      return (h(\"option\", { selected: this.value === item.value ? true : null, value: item.value }, item.label));\n    }))), getTagHint(this.hint), getTagError(!this.isValid(), this.requiredMessage)));\n  }\n  validateProps() {\n    this.optionsWatch();\n  }\n  shouldBeDisabled() {\n    return this.disabled ? true : null;\n  }\n  // Todo: find how to set proper TYPE in TS\n  setValue() {\n    this.value = this.getValueFromMultiSelect();\n    this.status = updateStatus(this.status, {\n      dotTouched: true,\n      dotPristine: false,\n      dotValid: this.isValid()\n    });\n    this.emitValueChange();\n    this.emitStatusChange();\n  }\n  getValueFromMultiSelect() {\n    const selected = this.el.querySelectorAll('option:checked');\n    const values = Array.from(selected).map((el) => el.value);\n    return Array.from(values).join(',');\n  }\n  emitInitialValue() {\n    if (!this.value) {\n      this.value = this._options.length ? this._options[0].value : '';\n      this.emitValueChange();\n    }\n  }\n  emitStatusChange() {\n    this.dotStatusChange.emit({\n      name: this.name,\n      status: this.status\n    });\n  }\n  isValid() {\n    return this.required ? !!this.value : true;\n  }\n  emitValueChange() {\n    this.dotValueChange.emit({\n      name: this.name,\n      value: this.value\n    });\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"options\": [\"optionsWatch\"]\n  }; }\n};\nDotMultiSelectComponent.style = dotMultiSelectCss;\n\nexport { DotMultiSelectComponent as dot_multi_select };\n","import { h } from './index-094afd6e.js';\nimport { d as getStringFromDotKeyArray, e as isStringType } from './utils-61ba0d04.js';\n\nconst DotFormFields = {\n  Text: (field) => (h(\"dot-textfield\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, \"regex-check\": field.regexCheck, required: field.required, value: field.defaultValue })),\n  Textarea: (field) => (h(\"dot-textarea\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, \"regex-check\": field.regexCheck, required: field.required, value: field.defaultValue })),\n  Checkbox: (field) => (h(\"dot-checkbox\", { hint: field.hint, label: field.name, name: field.variable, options: field.values, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, required: field.required, value: field.defaultValue })),\n  'Multi-Select': (field) => (h(\"dot-multi-select\", { hint: field.hint, label: field.name, name: field.variable, options: field.values, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, required: field.required, value: field.defaultValue })),\n  'Key-Value': (field) => (h(\"dot-key-value\", { \"field-type\": field.fieldType, hint: field.hint, label: field.name, name: field.variable, required: field.required, value: field.defaultValue })),\n  Select: (field) => (h(\"dot-select\", { hint: field.hint, label: field.name, name: field.variable, options: field.values, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, required: field.required, value: field.defaultValue })),\n  Radio: (field) => (h(\"dot-radio\", { hint: field.hint, label: field.name, name: field.variable, options: field.values, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, required: field.required, value: field.defaultValue })),\n  Date: (field) => (h(\"dot-date\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, required: field.required, value: field.defaultValue })),\n  Time: (field) => (h(\"dot-time\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, required: field.required, value: field.defaultValue })),\n  'Date-and-Time': (field) => (h(\"dot-date-time\", { hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, required: field.required, value: field.defaultValue })),\n  'Date-Range': (field) => (h(\"dot-date-range\", { hint: field.hint, label: field.name, name: field.variable, required: field.required, value: field.defaultValue })),\n  Tag: (field) => (h(\"dot-tags\", { data: () => {\n      return fetch('/api/v1/tags')\n        .then((data) => data.json())\n        .then((items) => Object.keys(items))\n        .catch(() => []);\n    }, hint: field.hint, label: field.name, name: field.variable, required: field.required, value: field.defaultValue })),\n  Binary: (field) => (h(\"dot-binary-file\", { accept: getFieldVariableValue(field.fieldVariables, 'accept'), \"max-file-length\": getFieldVariableValue(field.fieldVariables, 'maxFileLength'), hint: field.hint, label: field.name, name: field.variable, ref: (el) => {\n      setAttributesToTag(el, field.fieldVariables);\n    }, required: field.required }))\n};\n\nconst DOT_ATTR_PREFIX = 'dot';\n/**\n * Sets attributes to the HtmlElement from fieldVariables array\n *\n * @param HTMLElement element\n * @param DotCMSContentTypeFieldVariable fieldVariables\n */\nfunction setAttributesToTag(element, fieldVariables) {\n  fieldVariables.forEach(({ key, value }) => {\n    element.setAttribute(key, value);\n  });\n}\n/**\n * Given a string formatted value \"key|value,llave|valor\" return an object.\n * @param values\n */\nconst pipedValuesToObject = (values) => {\n  return isStringType(values)\n    ? values.split(',').reduce((acc, item) => {\n      const [key, value] = item.split('|');\n      return Object.assign(Object.assign({}, acc), { [key]: value });\n    }, {})\n    : null;\n};\nfunction isDotAttribute(name) {\n  return name.startsWith(DOT_ATTR_PREFIX);\n}\n/**\n * Sets attributes with \"dot\" prefix to the HtmlElement passed\n *\n * @param Element element\n * @param Attr[] attributes\n */\nfunction setDotAttributesToElement(element, attributes) {\n  attributes.forEach(({ name, value }) => {\n    element.setAttribute(name.replace(DOT_ATTR_PREFIX, ''), value);\n  });\n}\n/**\n * Returns \"Dot\" attributes from all element's attributes\n *\n * @param Attr[] attributes\n * @param string[] attrException\n * @returns Attr[]\n */\nfunction getDotAttributesFromElement(attributes, attrException) {\n  const exceptions = attrException.map((attr) => attr.toUpperCase());\n  return attributes.filter((item) => !exceptions.includes(item.name.toUpperCase()) && isDotAttribute(item.name));\n}\n/**\n * Returns if a field should be displayed from a comma separated list of fields\n * @param DotCMSContentTypeField field\n * @returns boolean\n */\nconst shouldShowField = (field, fieldsToShow) => {\n  const fields2Show = fieldsToShow ? fieldsToShow.split(',') : [];\n  return !fields2Show.length || fields2Show.includes(field.variable);\n};\n/**\n * Returns value of a Field Variable from a given key\n * @param DotCMSContentTypeFieldVariable[] fieldVariables\n * @param string key\n * @returns string\n */\nconst getFieldVariableValue = (fieldVariables, key) => {\n  if (fieldVariables && fieldVariables.length) {\n    const [variable] = fieldVariables.filter((item) => item.key.toUpperCase() === key.toUpperCase());\n    return variable && variable.value;\n  }\n  return null;\n};\n/**\n * Parse a string to JSON and returns the message text\n * @param string message\n * @returns string\n */\nconst getErrorMessage = (message) => {\n  let messageObj;\n  try {\n    messageObj = JSON.parse(message);\n  }\n  catch (error) {\n    messageObj = message;\n  }\n  return messageObj.errors && messageObj.errors.length && messageObj.errors[0].message\n    ? messageObj.errors[0].message\n    : message;\n};\n/**\n * Given a layout Object of fields, it returns a flat list of fields\n * @param DotCMSContentTypeLayoutRow[] layout\n * @returns DotCMSContentTypeField[]\n */\nconst getFieldsFromLayout = (layout) => {\n  return layout.reduce((acc, { columns }) => acc.concat(...columns.map((col) => col.fields)), []);\n};\nconst fieldParamsConversionFromBE = {\n  'Key-Value': (field) => {\n    if (field.defaultValue && typeof field.defaultValue !== 'string') {\n      const valuesArray = Object.keys(field.defaultValue).map((key) => {\n        return { key: key, value: field.defaultValue[key] };\n      });\n      field.defaultValue = getStringFromDotKeyArray(valuesArray);\n    }\n    return DotFormFields['Key-Value'](field);\n  }\n};\nconst fieldCustomProcess = {\n  'DOT-KEY-VALUE': pipedValuesToObject\n};\nconst fieldMap = {\n  Time: DotFormFields.Time,\n  Textarea: DotFormFields.Textarea,\n  Text: DotFormFields.Text,\n  Tag: DotFormFields.Tag,\n  Select: DotFormFields.Select,\n  Radio: DotFormFields.Radio,\n  'Multi-Select': DotFormFields['Multi-Select'],\n  'Key-Value': fieldParamsConversionFromBE['Key-Value'],\n  'Date-and-Time': DotFormFields['Date-and-Time'],\n  'Date-Range': DotFormFields['Date-Range'],\n  Date: DotFormFields.Date,\n  Checkbox: DotFormFields.Checkbox,\n  Binary: DotFormFields.Binary\n};\n\nexport { DOT_ATTR_PREFIX as D, getErrorMessage as a, getFieldsFromLayout as b, shouldShowField as c, fieldMap as d, fieldCustomProcess as f, getDotAttributesFromElement as g, setDotAttributesToElement as s };\n","var global = require('../internals/global');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar TypeError = global.TypeError;\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aCallable(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike(O);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar CHROME_VERSION = require('../internals/engine-v8-version');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n\n// `Array.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var length = arguments.length;\n    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"names":["DotMultiSelectComponent","hostRef","_classCallCheck","registerInstance","this","dotValueChange","createEvent","dotStatusChange","value","name","label","hint","options","required","requiredMessage","disabled","size","_dotTouched","_dotPristine","_createClass","key","componentWillLoad","validateProps","emitInitialValue","status","getOriginalStatus","isValid","emitStatusChange","componentDidLoad","htmlElement","el","querySelector","setTimeout","attrs","getDotAttributesFromElement","Array","from","_this","attributes","setDotAttributesToElement","optionsWatch","validOptions","checkProp","_options","getDotOptionsFromFieldValue","render","classes","getClassNames","h","Host","class","Object","assign","multiple","getHintId","getErrorClass","dotValid","id","getId","shouldBeDisabled","onChange","_this2","setValue","map","item","selected","getTagHint","getTagError","getValueFromMultiSelect","updateStatus","dotTouched","dotPristine","emitValueChange","querySelectorAll","values","join","length","emit","get","getElement","style","DotFormFields","Text","field","variable","ref","setAttributesToTag","fieldVariables","regexCheck","defaultValue","Textarea","Checkbox","fieldType","Select","Radio","Date","Time","Tag","data","fetch","then","json","items","keys","Binary","accept","getFieldVariableValue","DOT_ATTR_PREFIX","element","forEach","setAttribute","replace","attrException","exceptions","attr","toUpperCase","filter","includes","isDotAttribute","startsWith","shouldShowField","fieldsToShow","fields2Show","split","getErrorMessage","message","messageObj","JSON","parse","error","errors","getFieldsFromLayout","layout","reduce","acc","columns","concat","col","fields","fieldParamsConversionFromBE","valuesArray","getStringFromDotKeyArray","fieldCustomProcess","pipedValuesToObject","isStringType","fieldMap","global","aCallable","toObject","IndexedObject","lengthOfArrayLike","TypeError","createMethod","IS_RIGHT","that","callbackfn","argumentsLength","memo","O","self","index","i","module","exports","left","right","$","$reduce","arrayMethodIsStrict","CHROME_VERSION","IS_NODE","target","proto","forced","arguments","undefined"],"sourceRoot":"webpack:///"}