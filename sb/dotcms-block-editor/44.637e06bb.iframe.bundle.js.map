{"version":3,"file":"44.637e06bb.iframe.bundle.js","mappings":"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","sources":["./dist/libs/dotcms-webcomponents/dist/esm/dot-key-value.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-5965c697.js';\nimport { f as getDotOptionsFromFieldValue, g as getOriginalStatus, a as getClassNames, b as getTagError, c as getTagHint, h as getHintId, u as updateStatus, d as getStringFromDotKeyArray } from './utils-4086c226.js';\nimport { c as checkProp } from './checkProp-286e406e.js';\n\nconst dotKeyValueCss = \"\";\n\nconst mapToKeyValue = ({ label, value }) => {\n  return {\n    key: label,\n    value\n  };\n};\nconst DotKeyValueComponent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.dotValueChange = createEvent(this, \"dotValueChange\", 7);\n    this.dotStatusChange = createEvent(this, \"dotStatusChange\", 7);\n    /** Value of the field */\n    this.value = '';\n    /** Name that will be used as ID */\n    this.name = '';\n    /** (optional) Text to be rendered next to input field */\n    this.label = '';\n    /** (optional) Hint text that suggest a clue of the field */\n    this.hint = '';\n    /** (optional) Determine if it is mandatory */\n    this.required = false;\n    /** (optional) Text that will be shown when required is set and condition is not met */\n    this.requiredMessage = 'This field is required';\n    /** (optional) Disables field's interaction */\n    this.disabled = false;\n    /** (optional) Allows unique keys only */\n    this.uniqueKeys = false;\n    this.items = [];\n  }\n  valueWatch() {\n    this.value = checkProp(this, 'value', 'string');\n    this.items = getDotOptionsFromFieldValue(this.value).map(mapToKeyValue);\n  }\n  /**\n   * Reset properties of the field, clear value and emit events.\n   */\n  async reset() {\n    this.items = [];\n    this.value = '';\n    this.status = getOriginalStatus(this.isValid());\n    this.emitChanges();\n  }\n  deleteItemHandler(event) {\n    event.stopImmediatePropagation();\n    this.items = this.items.filter((_item, index) => index !== event.detail);\n    this.refreshStatus();\n    this.emitChanges();\n  }\n  reorderItemsHandler(event) {\n    event.stopImmediatePropagation();\n    // Hack to clean the items in DOM without showing \"No values\" label\n    this.items = [{ key: ' ', value: '' }];\n    const keys = document.querySelectorAll('.key-value-table-wc__key');\n    const values = document.querySelectorAll('.key-value-table-wc__value');\n    let keyValueRawData = '';\n    for (let i = 0, total = keys.length; i < total; i++) {\n      keyValueRawData += `${keys[i].innerHTML}|${values[i].innerHTML},`;\n    }\n    // Timeout to let the DOM get cleaned and then repopulate with list of keyValues\n    setTimeout(() => {\n      this.items = [\n        ...getDotOptionsFromFieldValue(keyValueRawData.substring(0, keyValueRawData.length - 1)).map(mapToKeyValue)\n      ];\n      this.refreshStatus();\n      this.emitChanges();\n    }, 100);\n  }\n  addItemHandler({ detail }) {\n    const itemExists = this.items.some((item) => item.key === detail.key);\n    if ((this.uniqueKeys && !itemExists) || !this.uniqueKeys) {\n      this.items = [...this.items, detail];\n      this.refreshStatus();\n      this.emitChanges();\n    }\n  }\n  componentWillLoad() {\n    this.validateProps();\n    this.setOriginalStatus();\n    this.emitStatusChange();\n  }\n  render() {\n    const classes = getClassNames(this.status, this.isValid(), this.required);\n    return (h(Host, { class: Object.assign({}, classes) }, h(\"dot-label\", { \"aria-describedby\": getHintId(this.hint), tabIndex: this.hint ? 0 : null, label: this.label, required: this.required, name: this.name }, h(\"key-value-form\", { onLostFocus: this.blurHandler.bind(this), \"add-button-label\": this.formAddButtonLabel, disabled: this.isDisabled(), \"empty-dropdown-option-label\": this.whiteListEmptyOptionLabel, \"key-label\": this.formKeyLabel, \"key-placeholder\": this.formKeyPlaceholder, \"value-label\": this.formValueLabel, \"value-placeholder\": this.formValuePlaceholder, \"white-list\": this.whiteList }), h(\"key-value-table\", { onClick: (e) => {\n        e.preventDefault();\n      }, \"button-label\": this.listDeleteLabel, disabled: this.isDisabled(), items: this.items })), getTagHint(this.hint), getTagError(this.showErrorMessage(), this.getErrorMessage())));\n  }\n  isDisabled() {\n    return this.disabled || null;\n  }\n  blurHandler() {\n    if (!this.status.dotTouched) {\n      this.status = updateStatus(this.status, {\n        dotTouched: true\n      });\n      this.emitStatusChange();\n    }\n  }\n  validateProps() {\n    this.valueWatch();\n  }\n  setOriginalStatus() {\n    this.status = getOriginalStatus(this.isValid());\n  }\n  isValid() {\n    return !(this.required && !this.items.length);\n  }\n  showErrorMessage() {\n    return this.getErrorMessage() && !this.status.dotPristine;\n  }\n  getErrorMessage() {\n    return this.isValid() ? '' : this.requiredMessage;\n  }\n  refreshStatus() {\n    this.status = updateStatus(this.status, {\n      dotTouched: true,\n      dotPristine: false,\n      dotValid: this.isValid()\n    });\n  }\n  emitStatusChange() {\n    this.dotStatusChange.emit({\n      name: this.name,\n      status: this.status\n    });\n  }\n  emitValueChange() {\n    const returnedValue = getStringFromDotKeyArray(this.items);\n    this.dotValueChange.emit({\n      name: this.name,\n      value: returnedValue\n    });\n  }\n  emitChanges() {\n    this.emitStatusChange();\n    this.emitValueChange();\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueWatch\"]\n  }; }\n};\nDotKeyValueComponent.style = dotKeyValueCss;\n\nexport { DotKeyValueComponent as dot_key_value };\n"],"names":["mapToKeyValue","key","label","value","DotKeyValueComponent","hostRef","_classCallCheck","registerInstance","this","dotValueChange","createEvent","dotStatusChange","name","hint","required","requiredMessage","disabled","uniqueKeys","items","_createClass","valueWatch","checkProp","getDotOptionsFromFieldValue","map","status","getOriginalStatus","isValid","emitChanges","deleteItemHandler","event","stopImmediatePropagation","filter","_item","index","detail","refreshStatus","reorderItemsHandler","keys","document","querySelectorAll","values","keyValueRawData","i","total","length","innerHTML","setTimeout","_this","substring","addItemHandler","itemExists","some","item","componentWillLoad","validateProps","setOriginalStatus","emitStatusChange","render","classes","getClassNames","h","Host","class","Object","assign","getHintId","tabIndex","onLostFocus","blurHandler","bind","formAddButtonLabel","isDisabled","whiteListEmptyOptionLabel","formKeyLabel","formKeyPlaceholder","formValueLabel","formValuePlaceholder","whiteList","onClick","e","preventDefault","listDeleteLabel","getTagHint","getTagError","showErrorMessage","getErrorMessage","dotTouched","updateStatus","dotPristine","dotValid","emit","emitValueChange","returnedValue","getStringFromDotKeyArray","get","getElement","style"],"sourceRoot":"webpack:///"}