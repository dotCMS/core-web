#button-basic {
    height: $button-height;
    margin-right: 0;
    outline: none;
    transition: all $field-animation-speed ease-in;

    .ui-button-text {
        font-size: $button-text-size;
    }
}

#button-main {
    @each $label, $props in $button-main {
        @include button-properties($label, $props);
    }

    .ui-button-text {
        font-weight: 500;
        text-transform: uppercase;
    }
}

#button-main-disabled {
    @include button-state(map-get($button-main, disabled));
    @extend #button-disabled;
}

#button-sec {
    @each $label, $props in $button-sec {
        @include button-properties($label, $props);
    }
}

#button-sec-disabled {
    @include button-state(map-get($button-sec, disabled));
    @extend #button-disabled;
}

#button-disabled {
    cursor: inherit;
}

.ui-button {
    @extend #button-basic;
    @extend #button-main;

    &[disabled] {
        @extend #button-main-disabled;
    }

    &[secondary] {
        @extend #button-sec;

        &[disabled] {
            @extend #button-sec-disabled;
        }
    }

    &[tiny] {
        height: $button-tiny-height;

        .ui-button-text {
            padding: 0 $basic-padding * 2;
            font-size: $button-tiny-text-size;
        }
    }

    &[link] {
        background: none;

        &:not([disabled]) {
            .ui-button-text,
            [class^="ui-button-icon"] {
                color: $brand-secondary;
            }

            &:hover {
                background: rgba($brand-secondary_rgb, 0.1);
            }
        }
    }

    &.ui-button-icon-only {
        box-shadow: none;
        border-radius: 50%;
        width: $field-height;
        height: $field-height;

        &[tiny] {
            width: $button-tiny-height;
            height: $button-tiny-height;
        }

        &:not([disabled]) {
            background: none;

            &:hover {
                opacity: 1;
                background: rgba($brand-secondary_rgb, $button-hover-background-opacity);
            }

            [class^="ui-button-icon"] {
                color: map-get(map-get($button-sec, normal), color);
            }

            &[secondary] {
                @extend #button-main;
                box-shadow: $md-shadow-1;

                &:hover {
                    box-shadow: $md-shadow-2;
                }
            }
        }
    }

    &.inverted {
        &:not([disabled]) {
            &:active,
            &:focus,
            &:hover {
                background: rgba($white, $button-hover-background-opacity);

                .ui-button-text {
                    color: $white;
                }
            }

            [class^="ui-button-icon"],
            .ui-button-text,
            .ui-c {
                color: $white;
            }
        }
    }
}


// BUTTONS WITH ICONS

.ui-button-text {
    $text-margin-with-icon: 40px;
    transition: all $field-animation-speed ease-in;

    .ui-button-text-only & {
        padding: 0 $button-padding;
    }

    .ui-button-text-icon-left & {
        padding: 0 $button-padding 0 $text-margin-with-icon;
    }

    .ui-button-text-icon-right & {
        padding: 0 $text-margin-with-icon 0 $button-padding;
    }

    .ui-button-text-icon-left[tiny] & {
        padding-left: 30px;
    }

    .ui-button-text-icon-right[tiny] & {
        padding-right: 30px;
    }
}

.ui-button-icon-left,
.ui-button-icon-right {
    font-size: 1rem;
    margin-top: -0.45em;
    transition: all $field-animation-speed ease-in;

    [tiny] & {
        font-size: $button-tiny-text-size;
    }
}

.ui-button-icon-left {
    left: 20px;

    [tiny] & {
        left: 15px;
    }
}

.ui-button-icon-right {
    right: 20px;

    [tiny] & {
        right: 15px;
    }
}

.ui-button-icon-only {
    .fa {
        margin-top: -.5em;
        margin-left: -.65em;
    }

    &[tiny] .fa {
        margin-top: -.4em;
        margin-left: -.7em;
    }
}
