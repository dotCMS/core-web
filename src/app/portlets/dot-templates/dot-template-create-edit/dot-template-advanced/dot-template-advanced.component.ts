import { Component, OnInit } from '@angular/core';

import { DotContainer } from '@shared/models/container/dot-container.model';

@Component({
    selector: 'dot-template-advanced',
    templateUrl: './dot-template-advanced.component.html',
    styleUrls: ['./dot-template-advanced.scss']
})
export class DotTemplateAdvancedComponent implements OnInit {
    editor: any; // `any` because the type of the editor in the ngx-monaco-editor package is not typed

    constructor() {}

    ngOnInit(): void {}

    /**
     * This method initializes the monaco editor
     *
     * @param {*} editor
     * @memberof DotTemplateComponent
     */
    initEditor(editor: any): void {
        this.editor = editor;
    }

    /**
     * This method handles the change event of the searchable selector and
     * inserts the container to the editor
     *
     * @param {DotContainer} container
     * @memberof DotTemplateComponent
     */
    containerChange(container: DotContainer): void {
        const selection = this.editor.getSelection();

        const id = this.setContainerId(container);

        const text = `## Container: ${
            container.name
        }\n## This is autogenerated code that cannot be changed\n#parseContainer('${id}','${Date.now()}')\n`;
        const operation = { range: selection, text: text, forceMoveMarkers: true };
        this.editor.executeEdits('source', [operation]);
    }

    private setContainerId(container: DotContainer): string {
        const regex = new RegExp('//' + container.parentPermissionable.hostname);
        return container.identifier.includes(container.parentPermissionable.hostname)
            ? container.identifier.replace(regex, '')
            : container.identifier;
    }
}
